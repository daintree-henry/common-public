plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.1'
    id 'io.spring.dependency-management' version '1.1.0'
    id "net.linguica.maven-settings" version "0.5"
    id 'maven-publish'
}

group = project.rootProject.group
version = project.rootProject.version
sourceCompatibility = "17"

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
    maven { url "https://repo.spring.io/milestone" }
    maven {
        name 'devwikiorg'
        url 'https://pkgs.dev.azure.com/devwikiorg/_packaging/devwikiorg/maven/v1'
        credentials {
            username = project.findProperty('repoUser') ?: System.getenv('REPO_USER')
            password = project.findProperty('repoPassword') ?: System.getenv('REPO_PASSWORD')
        }
    }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-aop'
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    //Mapper
    implementation 'org.mapstruct:mapstruct:1.5.5.Final'

    //Bcrypt
    implementation 'at.favre.lib:bcrypt:0.10.2'

    //common-lib-user
    implementation 'online.devwiki.common:lib-user:1.0.7'

    compileOnly 'org.projectlombok:lombok:1.18.26'

    //QueryDsl
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor 'com.querydsl:querydsl-apt:5.0.0:jakarta'
    annotationProcessor 'jakarta.annotation:jakarta.annotation-api'
    annotationProcessor 'jakarta.persistence:jakarta.persistence-api'

    runtimeOnly 'org.postgresql:postgresql'
    annotationProcessor 'org.hibernate.validator:hibernate-validator-annotation-processor:8.0.0.Final'
    annotationProcessor 'org.projectlombok:lombok:1.18.26'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

test {
    useJUnitPlatform()
}

// Querydsl 설정부
def generated = 'src/main/generated'

// querydsl QClass 파일 생성 위치를 지정
tasks.withType(JavaCompile) {
    options.getGeneratedSourceOutputDirectory().set(file(generated))
}

// java source set 에 querydsl QClass 위치 추가
sourceSets {
    main.java.srcDirs += [generated]
}

// gradle clean 시에 QClass 디렉토리 삭제
clean {
    delete file(generated)
}